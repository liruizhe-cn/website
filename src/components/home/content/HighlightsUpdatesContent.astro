---
import {
  allTimelineEvents,
  type TimelineEventItem,
} from "../../../data/timelineEvents";
import Button from "../../common/Button.astro";
const numberOfHighlightsToShow = 3;

const allHighlights: TimelineEventItem[] = allTimelineEvents.filter(
  (event) => event.isHighlight
);
allHighlights.sort(
  (a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()
);
const highlightsToShow: TimelineEventItem[] = allHighlights.slice(
  0,
  numberOfHighlightsToShow
);

const timelineUrl = "/timeline";
function formatEventDate(dateStr: string): string {
  if (!dateStr) return "";
  try {
    const [year, month] = dateStr.split("-").map(Number);
    const date = new Date(Date.UTC(year, month - 1));
    return date.toLocaleDateString("en-US", {
      year: "numeric",
      month: "long",
      timeZone: "UTC",
    });
  } catch (e) {
    console.error(`Error parsing date string "${dateStr}":`, e);
    return dateStr;
  }
}
---

<h2 slot="title" class="about-title scroll-target-title">
  Highlights & Updates
</h2>

<div class="about-content scroll-target-content">
  {
    highlightsToShow.length > 0 ? (
      <ul class="highlights-list-enhanced">
        {highlightsToShow.map((event) => (
          <li class="highlight-item-enhanced">
            <div class="highlight-meta">
              <time datetime={event.date} class="highlight-date">
                {formatEventDate(event.date)}
              </time>
            </div>
            <div class="highlight-body">
              <h4 class="highlight-title">{event.title}</h4>
              {event.highlightSummary ? (
                <p
                  class="highlight-summary"
                  set:html={event.highlightSummary}
                />
              ) : event.description ? (
                <div
                  class="highlight-description"
                  set:html={event.description}
                />
              ) : null}
            </div>
          </li>
        ))}
      </ul>
    ) : (
      <p>No recent highlights available. Check back soon!</p> // Fallback message
    )
  }

  <div class="button-group">
    <Button
      class="button"
      href={timelineUrl}
      text="Explore My Journey"
      wrapperClass="cta-link"
    />
  </div>
</div>

<style>
  .highlights-list-enhanced {
    list-style: none;
    padding-left: 0;
    margin-top: 0;
  }

  .highlight-item-enhanced {
    margin-bottom: 2.5rem;
    padding-bottom: 2.5rem;
    border-bottom: 1px solid var(--theme-divider-color);
  }

  .highlight-item-enhanced:last-child {
    margin-bottom: 0;
    padding-bottom: 0;
    border-bottom: none;
  }

  .highlight-meta {
    margin-bottom: 0.5rem;
  }

  .highlight-date {
    font-family: var(--font-family-sans);
    font-size: 0.9rem;
    line-height: 1.6;
    display: block;
  }

  .highlight-body p {
    margin: 0;
  }

  .highlight-title {
    font-size: 1.2rem;
    font-weight: 600;
    margin: 0 0 0.5rem 0;
    line-height: 1.5;
  }

  .highlight-summary,
  .highlight-description p {
    font-size: 1rem;
    color: var(--theme-text);
    margin: 0;
    line-height: 1.7;
  }

  .highlight-description {
    margin: 0;
  }
  .highlight-description ul {
    padding-left: 1.2em;
    margin-top: 0.5em;
    list-style: disc;
  }
  .button-group {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
  }

  @media (min-width: 640px) {
    .highlight-item-enhanced {
      display: flex;
      gap: 1.5rem;
    }

    .highlight-meta {
      flex: 0 0 80px;
      margin-bottom: 0;
    }

    .highlight-body {
      flex: 1 1 auto;
    }
  }
</style>
